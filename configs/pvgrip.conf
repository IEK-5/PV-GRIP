# Configuration of ports and networks


[storage]
# which remote to support
use_remotes = ["ipfs_path", "cassandra_path"]
# default remote
default = ipfs_path


# cassandra storage configuration
#
# ip
#             ip address of one of the cassandra nodes
#
# chunksize
#             size of a file chunk in bytes
#             files are stored by splitting them in chunks
#
# keyspace_suffix
#             name of keyspace suffixes to use
#
# replication, replication_args
#             cassandra replication strategy
#
# spatial_index_hash_min, spatial_index_depth
#             parameters of the Cassandra_Spatial_Index
[cassandra]
ip = 10.0.0.2
chunksize = 262144
keyspace_suffix = _open_elevation
replication = SimpleStrategy
replication_args = {"replication_factor": 1}
spatial_index_hash_min = 2
spatial_index_depth = 5


[ipfs]
# ip address of ipfs and ipfs_cluster
ip = 10.2.2.2
keyspace_suffix = _pvgrip_storage


# redis configuration
#
# ip
#             redis server to use
[redis]
ip = 10.0.0.2


# grass library configuration
#
# executable
#             name of the executable in the docker image
#
# njobs
#             number of processing jobs to launch in grass
#
# max_partition
#             maximum number of pixels to use in a partition.
#             this is used to roughly chunk inputs data
[grass]
executable = grass78
njobs = 4


# ssdp library configuration
#
# executable
#             name of the executable in the docker image
#
# njobs
#             number of threads to use in ssdp
[ssdp]
executable = ssdp
njobs = 4


# cache properties
#
# limit_worker
#             amount of GB of the local worker cache
[cache]
limit_worker = 10


# server bind address
#
# interface
#             name of network interface to use for binding
#
#
# celery_workers
#             maximum number of celery workers that run tasks
#
# max_memory_worker
#             defines maximum of resident memory in kilobytes
#             before a celery worker is restarted
#
# logging_level
#             logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
#
# docker_registry
#             location of the repository, where images reside
#
# image_tag
#             version of the image from the repository to use
[server]
interface = pvgrip
celery_workers = 4
max_memory_worker = 2097152
logging_level = INFO
docker_registry=10.43.128.3:5000
image_tag=latest


# Webserver configs
[webserver]
# number of workers that listen to user requests
workers = 2
# maximum number of requests before gunicorn server is restarted
max_requests = 20
# seconds after which the server gives up on request
request_timeout = 60
# seconds to wait to queue generation
queue_timeout = 10
# seconds to wait to a task to complete
task_timeout = 10
# host port
#   leave empty if use bind to [server][interface]
hostport = 8081


# OpenStreetMap configs
#
# referer
#             We have to set referer. If this is not done we could be
#             denied access to osm data. See:
#             https://help.openstreetmap.org/questions/55828/overpass-returns-429-every-time-for-some-queries-but-not-for-others
#
# url
#             overpass api server to query
[osm]
referer = open-elevation
url = http://overpass-api.de/api/interpreter?data=
hash_length = 5


# copernicus data
#
# cds_url, cds_key, ads_url, ads_key
#             url and keys from ads.atmosphere.copernicus.eu
#             and cds.climate.copernicus.eu
#             key has a format {UID}:{API_key}
#
# hash_length
#             hash length corresponding to the way the Earth is meshed
#             hash length 5 corresponds to about 5km box (depending on location)
#             hash length 6 corresponds to about 1km box
[copernicus]
cds_url = https://cds.climate.copernicus.eu/api/v2
ads_url = https://ads.atmosphere.copernicus.eu/api/v2
hash_length = 6
